"""Initial Schema

Revision ID: a6157f1aa809
Revises: 
Create Date: 2017-05-04 17:38:29.720986

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a6157f1aa809'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=512), nullable=False),
    sa.Column('address_to', sa.String(length=64), nullable=True),
    sa.Column('address', sa.String(length=128), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=32), nullable=True),
    sa.Column('zip', sa.String(length=16), nullable=True),
    sa.Column('phone', sa.String(length=16), nullable=True),
    sa.Column('fax', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('permission',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_table('property',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('address', sa.String(length=512), nullable=False),
    sa.Column('city', sa.String(length=256), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip', sa.String(length=32), nullable=False),
    sa.Column('inside_city_limits', sa.Boolean(), server_default='True', nullable=False),
    sa.Column('county_code', sa.String(length=16), nullable=True),
    sa.Column('county', sa.String(length=256), nullable=True),
    sa.Column('latitude', sa.DECIMAL(), nullable=True),
    sa.Column('longitude', sa.DECIMAL(), nullable=True),
    sa.Column('rooms', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('role',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_account',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('confirmed', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('email_token', sa.String(length=512), nullable=False),
    sa.Column('email_token_ts', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('password', sa.String(length=1024), nullable=True),
    sa.Column('password_ts', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='True', nullable=False),
    sa.Column('first_name', sa.String(length=256), nullable=False),
    sa.Column('last_name', sa.String(length=256), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=512), nullable=True),
    sa.Column('password_reset_ts', sa.TIMESTAMP(), nullable=True),
    sa.Column('failed_attempts', sa.SmallInteger(), server_default=sa.text(u'0'), nullable=False),
    sa.Column('failed_attempt_ts', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('settings', postgresql.JSON(), nullable=True),
    sa.CheckConstraint(u"email ~* '^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,}$'", name='valid_user_account_email'),
    sa.CheckConstraint(u"phone ~* '^(\\+?\\d{1,2}[-\\s.]?)?\\(?\\d{3}\\)?[-\\s.]?\\d{3}[-\\s.]?\\d{4}$'", name='valid_user_account_phone'),
    sa.CheckConstraint(u"username ~* '^[A-Za-z][-A-Za-z0-9._]{5,}$'", name='valid_user_account_username'),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user_account.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='unique_user_account_email'),
    sa.UniqueConstraint('email_token'),
    sa.UniqueConstraint('email_token', name='unique_user_account_email_token'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', name='unique_user_account_username')
    )
    op.create_table('widget',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('company_property',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('company_uid', sa.BigInteger(), nullable=False),
    sa.Column('property_uid', sa.BigInteger(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), server_default=sa.text(u'Null'), nullable=True),
    sa.ForeignKeyConstraint(['company_uid'], [u'company.uid'], ),
    sa.ForeignKeyConstraint(['property_uid'], [u'property.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('company_uid', 'property_uid', name='unique_company_property_company_uid_property_uid')
    )
    op.create_table('occupancy_tax_report',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.String(), nullable=False),
    sa.Column('taxpayer_number', sa.String(length=64), nullable=False),
    sa.Column('taxpayer_name', sa.String(length=512), nullable=False),
    sa.Column('taxpayer_address', sa.String(length=512), nullable=False),
    sa.Column('taxpayer_city', sa.String(length=256), nullable=False),
    sa.Column('taxpayer_state', sa.String(length=2), nullable=False),
    sa.Column('taxpayer_zip', sa.String(length=32), nullable=False),
    sa.Column('taxpayer_county_code', sa.String(length=16), nullable=True),
    sa.Column('taxpayer_county', sa.String(length=256), nullable=True),
    sa.Column('taxpayer_latitude', sa.DECIMAL(), nullable=True),
    sa.Column('taxpayer_longitude', sa.DECIMAL(), nullable=True),
    sa.Column('hotel_location_number', sa.String(), nullable=False),
    sa.Column('hotel_name', sa.String(length=512), nullable=False),
    sa.Column('hotel_address', sa.String(length=512), nullable=False),
    sa.Column('hotel_city', sa.String(length=256), nullable=False),
    sa.Column('hotel_state', sa.String(length=2), nullable=False),
    sa.Column('hotel_zip', sa.String(length=32), nullable=False),
    sa.Column('hotel_inside_city_limits', sa.Boolean(), server_default='True', nullable=False),
    sa.Column('hotel_county_code', sa.String(length=16), nullable=True),
    sa.Column('hotel_county', sa.String(length=256), nullable=True),
    sa.Column('hotel_latitude', sa.DECIMAL(), nullable=True),
    sa.Column('hotel_longitude', sa.DECIMAL(), nullable=True),
    sa.Column('hotel_rooms', sa.Integer(), nullable=False),
    sa.Column('hotel_total_room_receipts', sa.DECIMAL(), nullable=False),
    sa.Column('hotel_taxable_room_receipts', sa.DECIMAL(), nullable=False),
    sa.Column('property_uid', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['property_uid'], ['property.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('report',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('draft', sa.Boolean(), server_default='True', nullable=False),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', postgresql.JSON(), nullable=True),
    sa.Column('created_by_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user_account.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('role_permission',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('role_uid', sa.BigInteger(), nullable=False),
    sa.Column('permission_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['permission_uid'], [u'permission.uid'], ),
    sa.ForeignKeyConstraint(['role_uid'], [u'role.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('role_uid', 'permission_uid', name='unique_role_permission_role_uid_permission_uid')
    )
    op.create_table('user_account_permission',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('user_account_uid', sa.BigInteger(), nullable=False),
    sa.Column('permission_uid', sa.BigInteger(), nullable=False),
    sa.Column('permit', sa.Boolean(), server_default='True', nullable=False),
    sa.ForeignKeyConstraint(['permission_uid'], [u'permission.uid'], ),
    sa.ForeignKeyConstraint(['user_account_uid'], ['user_account.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('user_account_uid', 'permission_uid', name='unique_user_account_permission_user_account_uid_permission_uid')
    )
    op.create_table('user_account_role',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('user_account_uid', sa.BigInteger(), nullable=False),
    sa.Column('role_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['role_uid'], [u'role.uid'], ),
    sa.ForeignKeyConstraint(['user_account_uid'], ['user_account.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('user_account_uid', 'role_uid', name='unique_user_account_role_user_account_uid_role_uid')
    )
    op.create_table('widget_parameter',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('data_type', sa.String(length=64), server_default='str', nullable=False),
    sa.Column('required', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('default', sa.String(length=2048), nullable=True),
    sa.Column('options', postgresql.ARRAY(sa.String(length=512)), nullable=True),
    sa.Column('multi_option', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('widget_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['widget_uid'], [u'widget.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('widget_setting',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('data_type', sa.String(length=64), server_default='str', nullable=False),
    sa.Column('required', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('default', sa.String(length=2048), nullable=True),
    sa.Column('options', postgresql.ARRAY(sa.String(length=512)), nullable=True),
    sa.Column('multi_option', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('widget_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['widget_uid'], [u'widget.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('report_widget',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('path', sa.String(length=1024), nullable=False),
    sa.Column('column', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('parameters', postgresql.JSON(), nullable=True),
    sa.Column('settings', postgresql.JSON(), nullable=True),
    sa.Column('report_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['report_uid'], [u'report.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('user_account_report',
    sa.Column('_created', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('_modified', sa.TIMESTAMP(), server_default=sa.text(u"timezone('utc'::text, now())"), nullable=False),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('user_account_uid', sa.BigInteger(), nullable=False),
    sa.Column('report_uid', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['report_uid'], [u'report.uid'], ),
    sa.ForeignKeyConstraint(['user_account_uid'], ['user_account.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('user_account_uid', 'report_uid', name='unique_user_account_report_user_account_uid_report_uid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_account_report')
    op.drop_table('report_widget')
    op.drop_table('widget_setting')
    op.drop_table('widget_parameter')
    op.drop_table('user_account_role')
    op.drop_table('user_account_permission')
    op.drop_table('role_permission')
    op.drop_table('report')
    op.drop_table('occupancy_tax_report')
    op.drop_table('company_property')
    op.drop_table('widget')
    op.drop_table('user_account')
    op.drop_table('role')
    op.drop_table('property')
    op.drop_table('permission')
    op.drop_table('company')
    # ### end Alembic commands ###
